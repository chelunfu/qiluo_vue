export default {
  analysis: {
    activeQuantity: 'Active Quantity',
    actual: 'Actual',
    allianceAdvertising: 'Alliance Advertising',
    april: 'April',
    august: 'August',
    december: 'December',
    directAccess: 'Direct Access',
    estimate: 'Estimate',
    february: 'February',
    friday: 'Friday',
    january: 'January',
    july: 'July',
    june: 'June',
    mailMarketing: 'Email Marketing',
    march: 'March',
    may: 'May',
    monday: 'Monday',
    monthlySales: 'Monthly Sales',
    newUser: 'New Users',
    november: 'November',
    october: 'October',
    saturday: 'Saturday',
    searchEngines: 'Search Engines',
    september: 'September',
    sunday: 'Sunday',
    thursday: 'Thursday',
    totalShopping: 'Total Shopping',
    transactionAmount: 'Transaction Amount',
    tuesday: 'Tuesday',
    unreadInformation: 'Unread Messages',
    userAccessSource: 'User Access Source',
    videoAdvertising: 'Video Advertising',
    wednesday: 'Wednesday',
    weeklyUserActivity: 'Weekly User Activity'
  },
  apipermission: {
    api: 'API Interface',
    apiname: 'Interface Name',
    logcache: 'Log Cache',
    method: 'Request Method'
  },
  cache: {
    cachekey: 'Cache Key',
    cachevalue: 'Cache Value'
  },
  help: {
    concise: 'Check FAQ first when unsure - you might find your answer there',
    faq: 'FAQ',
    tips: 'Tips'
  },
  common: {
    back: 'Back',
    cancel: 'Cancel',
    changedept: 'Switch Department',
    changerole: 'Switch Role',
    closeAll: 'Close All Tabs',
    closeOther: 'Close Other Tabs',
    closeTab: 'Close Tab',
    closeTheLeftTab: 'Close Left Tabs',
    closeTheRightTab: 'Close Right Tabs',
    collapse: 'Collapse/Expand',
    collapseDes: 'Collapse and expand menu bar',
    columnSetting: 'Column Settings',
    delCancel: 'Cancel',
    delMessage: 'Are you sure to delete the selected data?',
    delNoData: 'Please select data to delete',
    delOk: 'Confirm',
    delSuccess: 'Delete Successfully',
    delWarning: 'Warning',
    document: 'Project Documentation',
    doneLabel: 'Done',
    endTimeText: 'End Time',
    expand: 'Expand',
    fullscreen: 'Fullscreen',
    inputText: 'Please input',
    isEqual: 'Two inputs are inconsistent',
    lengthRange: 'Length should be {min} to {max} characters',
    login: 'Login',
    loginOut: 'Logout',
    loginOutMessage: 'Are you sure to logout?',
    menu: 'Menu',
    menuDes: 'Menu bar rendered with routing structure',
    nextLabel: 'Next',
    notSpace: 'Cannot contain spaces',
    notSpecialCharacters: 'Cannot contain special characters',
    ok: 'OK',
    prevLabel: 'Previous',
    query: 'Query',
    refershroute: 'Refresh Route',
    refresh: 'Refresh',
    reload: 'Reload',
    reminder: 'Reminder',
    required: 'This field is required',
    reset: 'Reset',
    selectText: 'Please select',
    setting: 'Settings',
    shrink: 'Shrink',
    size: 'Size',
    skipLabel: 'Skip',
    startTimeText: 'Start Time',
    submit: 'Submit',
    tagsView: 'Tags View',
    tagsViewDes: 'Used to record routing history',
    tool: 'Tools',
    toolDes: 'Used to customize system settings',
    validate: 'Validate'
  },
  department: {
    action: 'Action',
    index: 'Index'
  },
  dict_data: {
    default: 'Is Default',
    dict_label: 'Dictionary Label',
    dict_name: 'Dictionary Name',
    dict_type: 'Dictionary Type',
    dict_value: 'Dictionary Value'
  },
  error: {
    networkError: 'Sorry, server error occurred.',
    noPermission: 'Sorry, you do not have permission to access this page.',
    pageError: 'Sorry, the page you visited does not exist.',
    quitLogitn: 'Logout',
    returnToHome: 'Return to Home'
  },
  job: {
    concurrent: 'Concurrent Execution',
    cron_expression: 'Cron Expression',
    del_job: 'Delete Job',
    del_job_confirm: 'Are you sure to delete this job?',
    del_job_fail: 'Delete job failed',
    del_job_success: 'Delete job successfully',
    execute_fail: 'Execution failed',
    execute_job: 'Execute Job',
    execute_success: 'Execution successful',
    job_group: 'Job Group',
    job_message: 'Execution Message',
    job_name: 'Job Name',
    job_params: 'Job Parameters',
    methodName: 'Method Name',
    methodParams: 'Method Parameters',
    misfirePolicy: 'Misfire Policy',
    remark: 'Remark',
    run_count: 'Executed',
    status: 'Status',
    task_count: 'Total Executions',
    task_type: 'Task Type'
  },
  joblog: {
    descriptions: 'Description',
    joblog: 'Job Log'
  },
  lock: {
    backToLogin: 'Back to Login',
    entrySystem: 'Enter System',
    lock: 'Lock',
    lockPassword: 'Lock Password',
    lockScreen: 'Lock Screen',
    message: 'Lock screen password is incorrect',
    placeholder: 'Please enter lock screen password',
    unlock: 'Click to unlock'
  },
  login: {
    checkPassword: 'Confirm Password',
    code: 'Verification Code',
    codePlaceholder: 'Please enter verification code',
    forgetPassword: 'Forgot Password',
    getCode: 'Get Code',
    hasUser: 'Already have an account? Go to login',
    login: 'Login',
    message: 'WeChat Official Account to Get Verification Code',
    otherLogin: 'Other login methods',
    password: 'Password',
    passwordPlaceholder: 'Please enter password',
    register: 'Register',
    remember: 'Remember me',
    username: 'Username',
    usernamePlaceholder: 'Please enter username',
    welcome: 'WeChat Official Account'
  },
  login_info: {
    browser: 'Browser',
    device_type: 'Device Type',
    fail: 'Failed',
    ip: 'IP',
    login_location: 'Login Location',
    login_msg: 'Login Message',
    login_time: 'Login Time',
    loginstatus: 'Login Status',
    offline: 'Offline',
    online: 'Online',
    os: 'Operating System',
    success: 'Success',
    useronline: 'Online Status'
  },
  menu: {
    activeMenu: 'Active Menu',
    affix: 'Pin to Tags View',
    alwaysShow: 'Always Show',
    api: 'API Permission',
    breadcrumb: 'Show Breadcrumb',
    canTo: 'Can Navigate',
    childcontents: 'Sub Directory',
    component: 'Component',
    componentname: 'Component Name',
    contents: 'Directory',
    disable: 'Disable',
    enable: 'Enable',
    hidden: 'Hidden',
    icon: 'Icon',
    menu: 'Menu',
    menuName: 'Menu Name',
    menutype: 'Menu Type',
    method: 'Request Method',
    name: 'Component Name',
    noCache: 'No Cache',
    noTagsView: 'Hide Tags View',
    none: 'None',
    order: 'Order',
    parentmenu: 'Parent Menu',
    path: 'Path',
    permission: 'Button Permission',
    redirect: 'Redirect',
    status: 'Status',
    topmenu: 'Top Menu'
  },
  monitor: {
    CPU: 'CPU',
    D: 'Day',
    H: 'Hour',
    M: 'Minute',
    S: 'Second',
    cores: 'Cores',
    cpuUsage: 'CPU Usage',
    disk: 'Disk',
    diskInfo: 'Disk Information',
    diskName: 'Disk Name',
    diskUsage: 'Disk Usage',
    diskread: 'Disk Read',
    diskwrite: 'Disk Write',
    info: 'System Information',
    memory: 'Memory',
    network: 'Network',
    networkname: 'Network Interface',
    networkreceive: 'Receive',
    networksend: 'Send',
    networktotalreceive: 'Total Received',
    networktotalsend: 'Total Sent',
    processors: 'Processors',
    property: 'Property',
    serverinfo: 'Server Information',
    servername: 'Server Name',
    softinfo: 'Software Information',
    softname: 'Software Name',
    softruntime: 'Runtime',
    softstarttime: 'Start Time',
    swap: 'Total Swap',
    system: 'System',
    systemarch: 'System Architecture',
    systemkernel: 'System Kernel',
    systemversion: 'System Version',
    total: 'Total',
    usage: 'Usage',
    used: 'Used',
    usedSwap: 'Used Swap'
  },
  permission: {
    hasPermission: 'Please set operation permission value'
  },
  personal: {
    accout: 'Account',
    basicdata: 'Basic Data',
    basicinformation: 'Basic Information',
    cancel: 'Cancel',
    close: 'Close',
    confirmnewpassword: 'Confirm New Password',
    email: 'Email',
    haverole: 'Assigned Roles',
    issuremodified: 'Are you sure to modify?',
    modifiedavatar: 'Modify Avatar',
    modifiedfail: 'Modification failed',
    modifiedpassword: 'Modify Password',
    modifiedsucess: 'Modification successful',
    newpassword: 'New Password',
    nickname: 'Nickname',
    oldpassword: 'Old Password',
    passwordnotmatch: 'Password confirmation does not match',
    personalinfo: 'Personal Information',
    phone: 'Phone Number',
    save: 'Save',
    sure: 'Confirm',
    suremodified: 'Confirm Modification',
    tips: 'Tips'
  },
  role: {
    all: 'All Data Permission',
    allselected: 'Select All/Deselect All',
    custom: 'Custom Data Permission',
    dataScope: 'Data Permission',
    datarange: 'Data Range',
    dept: 'Department Data Permission',
    deptdown: 'Department and Below Data Permission',
    expand: 'Expand/Collapse',
    menu: 'Menu Assignment',
    order: 'Order',
    remark: 'Remark',
    role: 'Role',
    roleName: 'Role Name',
    rolekey: 'Role Key',
    self: 'Own Data Permission',
    status: 'Status',
    selectapi: 'Selected APIs',
    plaseiinputapi: 'Please enter API name'
  },
  router: {
    PicturePreview: 'Table Picture Preview',
    analysis: 'Analysis',
    authorization: 'Authorization Management',
    avatars: 'Avatar List',
    cardTable: 'Card Table',
    codeEditor: 'Code Editor',
    component: 'Component',
    countTo: 'Count Animation',
    dashboard: 'Dashboard',
    defaultForm: 'All Examples',
    defaultTable: 'Basic Example',
    department: 'Department Management',
    descriptions: 'Descriptions',
    details: 'Details',
    dialog: 'Dialog',
    document: 'Documentation',
    echart: 'Chart',
    editor: 'Editor',
    errorPage: 'Error Page',
    example: 'Comprehensive Example',
    exampleAdd: 'Comprehensive Example - Add',
    exampleDetail: 'Comprehensive Example - Detail',
    exampleDialog: 'Comprehensive Example - Dialog',
    exampleEdit: 'Comprehensive Example - Edit',
    examplePage: 'Comprehensive Example - Page',
    form: 'Form',
    function: 'Function',
    guide: 'Guide',
    highlight: 'Highlight',
    iAgree: 'I Agree',
    icon: 'Icon',
    iconPicker: 'Icon Picker',
    imageCropping: 'Image Cropping',
    imageViewer: 'Image Viewer',
    infotip: 'Info Tip',
    inputPassword: 'Password Input',
    jsonEditor: 'JSON Editor',
    level: 'Multi-level Menu',
    login: 'Login',
    menu: 'Menu',
    menu1: 'Menu 1',
    menu11: 'Menu 1-1',
    menu111: 'Menu 1-1-1',
    menu12: 'Menu 1-2',
    menu2: 'Menu 2',
    menuManagement: 'Menu Management',
    multipleTabs: 'Multiple Tabs',
    permission: 'Permission Test',
    personal: 'Personal',
    personalCenter: 'Personal Center',
    qrcode: 'QR Code',
    request: 'Request',
    richText: 'Rich Text',
    role: 'Role Management',
    search: 'Search',
    sticky: 'Sticky',
    table: 'Table',
    tableVideoPreview: 'Table Video Preview',
    treeTable: 'Tree Table',
    user: 'User Management',
    videoPlayer: 'Video Player',
    waterfall: 'Waterfall',
    watermark: 'Watermark',
    workplace: 'Workplace'
  },
  setting: {
    breadcrumb: 'Breadcrumb',
    breadcrumbIcon: 'Breadcrumb Icon',
    clearAndReset: 'Clear Cache and Reset',
    collapseMenu: 'Collapse Menu',
    copy: 'Copy',
    copyFailed: 'Copy Failed',
    copySuccess: 'Copy Success',
    cutMenu: 'Cut Menu',
    dynamicRouter: 'Enable Dynamic Router',
    fixedHeader: 'Fixed Header',
    fixedMenu: 'Fixed Menu',
    footer: 'Footer',
    greyMode: 'Grey Mode',
    hamburgerIcon: 'Hamburger Icon',
    headerTheme: 'Header Theme',
    interfaceDisplay: 'Interface Display',
    layout: 'Layout',
    localeIcon: 'Locale Icon',
    logo: 'Logo',
    menuTheme: 'Menu Theme',
    projectSetting: 'Project Settings',
    reExperienced: 'Please logout and login again to experience',
    screenfullIcon: 'Fullscreen Icon',
    serverDynamicRouter: 'Server Dynamic Router',
    sizeIcon: 'Size Icon',
    systemTheme: 'System Theme',
    tagsView: 'Tags View',
    tagsViewIcon: 'Tags View Icon',
    theme: 'Theme',
    uniqueOpened: 'Menu Accordion'
  },
  size: {
    default: 'Default',
    large: 'Large',
    small: 'Small'
  },
  systemlog: {
    api_name: 'API Name',
    cost_time: 'Cost Time',
    fail: 'Failed',
    json_result: 'Return Result',
    oper_ip: 'Request IP',
    oper_location: 'Request Location',
    oper_name: 'Operator',
    oper_url: 'Request URL',
    request_method: 'Request Method',
    status: 'Status',
    success: 'Success'
  },
  useronline: {
    forcequituser: 'Force quit user?',
    quitfail: 'Quit failed',
    quitsuccess: 'Quit success',
    quituser: 'Quit User',
    tokenid: 'Token ID'
  },
  vueCron: {
    allowed: 'Allowed wildcards:',
    closestDay: 'Closest working day',
    dayTitle: 'Day',
    dayTitle2: 'Day',
    execute: 'Execute',
    expression: 'Cron Expression',
    expressionField: 'Expression Field',
    from: 'From',
    hourTitle: 'Hour',
    hourTitle2: 'Hour',
    minuteTitle: 'Minute',
    minuteTitle2: 'Minute',
    monthTitle: 'Month',
    monthTitle2: 'Month',
    nextruntime: 'Next Runtime',
    resetCheckBox: 'Reset Checkbox',
    runOneTime: 'Run Once',
    second: {
      cycle: 'Cycle',
      fix: 'Specify',
      fixWeek: 'Monthly Week',
      interval: 'Interval'
    },
    secondTip: 'Start time must be less than end time',
    secondTitle: 'Second',
    secondTitle2: 'Second',
    t: {
      closestWorkDay: 'Closest Work Day',
      day: 'Daily',
      hour: 'Hourly',
      lastDay: 'Last Day of Month',
      lastWeekDay: 'Last Week of Month',
      minute: 'Every Minute',
      month: 'Monthly',
      none: 'None',
      notSpecify: 'Not Specify',
      second: 'Every Second',
      week: 'Weekly',
      year: 'Yearly'
    },
    title: 'Cron Expression Generator',
    to: 'To',
    toInterval: 'Every',
    validateTip: 'Please validate cron expression before submit!',
    validateTipError: 'Cron expression backend validation error, please readjust!',
    validateTipInfo:
      'Generated cron expression is validated by backend to ensure correctness, frontend does not validate!',
    validateTipSuccess: 'Cron expression is correct!',
    week: {
      1: 'Sunday',
      2: 'Monday',
      3: 'Tuesday',
      4: 'Wednesday',
      5: 'Thursday',
      6: 'Friday',
      7: 'Saturday'
    },
    weekTitle: 'Week',
    yearTitle: 'Year',
    yearTitle2: 'Year'
  },
  we_wechat_accounts: {
    account_type: 'Account Type',
    appid: 'App ID',
    appsecret: 'App Secret',
    avatar_url: 'Avatar URL',
    created_at: 'Created At',
    description: 'Description',
    encoding_aes_key: 'Encoding AES Key',
    id: 'ID',
    name: 'Name',
    qr_code_url: 'QR Code URL',
    status: 'Status',
    token: 'Token',
    updated_at: 'Updated At'
  },
  workplace: {
    access: 'Project Access',
    contribution: 'Contribution',
    dynamic: 'Dynamic',
    follow: 'Follow',
    goodMorning: 'Good Morning',
    happyDay: 'Have a nice day!',
    hot: 'Hot',
    index: 'Index',
    introduction: 'A serious introduction',
    more: 'More',
    operation: 'Operation',
    personal: 'Personal',
    project: 'Projects',
    push: 'Push',
    pushCode: 'Will pushed code to Github',
    quote: 'Quote',
    shortcutOperation: 'Shortcut Operation',
    team: 'Team',
    toDo: 'To Do',
    toady: 'Sunny Today',
    yield: 'Yield'
  },
  menuuser: {
    title: 'User Management',
    message:
      'Since it is simulated data, only two accounts with different permissions are provided. Developers can modify and combine according to actual conditions.',
    index: 'Index',
    action: 'Action',
    username: 'Username',
    password: 'Password',
    role: 'Role',
    remark: 'Remark',
    remarkMessage1: 'Backend controlled route permissions',
    remarkMessage2: 'Frontend controlled route permissions',
    departmentList: 'Department List',
    searchDepartment: 'Search Department',
    account: 'Account',
    email: 'Email',
    createTime: 'Create Time',
    department: 'Department',
    departmentName: 'Department Name',
    status: 'Status',
    enable: 'Enable',
    disable: 'Disable',
    superiorDepartment: 'Superior Department',
    nickname: 'Nickname',
    phone: 'Phone',
    sex: 'Gender',
    male: 'Male',
    female: 'Female',
    unknown: 'Unknown',
    activerole: 'Active Role',
    activedept: 'Active Department',
    leader: 'Leader',
    chagepassword: 'Change Password',
    newpassword: 'New Password',
    plaseinputusername: 'Please enter username',
    plaseinputpassword: 'Please enter password',
    plaseinpoutnicename: 'Please enter nickname',
    plaseselectstatus: 'Please select status',
    activedeptnonull: 'Active department cannot be empty',
    mustactivedept: 'Active department must be selected from chosen departments',
    activerolenonull: 'Active role cannot be empty',
    mustactiverolenull: 'Active role must be selected from chosen roles',
    userrolenonull: 'User role cannot be empty',
    userdeptnonull: 'User department cannot be empty'
  },
  usertable: {
    title: 'Title',
    add: 'Add',
    del: 'Delete',
    edit: 'Edit',
    author: 'Author',
    displayTime: 'Create Time',
    importance: 'Importance',
    pageviews: 'Page Views',
    important: 'Important',
    content: 'Content',
    save: 'Save',
    detail: 'Detail',
    noadd: 'Cannot add',
    chagepassword: 'Change Password'
  },
  dialog: {
    dialog: 'Dialog',
    open: 'Open',
    close: 'Close',
    submit: 'Submit',
    add: 'Add',
    edit: 'Edit',
    detail: 'Detail'
  },
  button: {
    add: 'Add',
    del: 'Delete',
    edit: 'Edit',
    detail: 'Detail',
    save: 'Save',
    close: 'Close',
    back: 'Back',
    execute: 'Execute'
  },
  warninginfo: {
    noadd: 'Cannot add'
  },
  status: {
    disable: 'Disable',
    enable: 'Enable'
  },
  form: {
    default: 'Default'
  }
}
